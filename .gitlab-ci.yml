# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
stages:
  - build
  - bridge

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IM_REF: 'initial'
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
    - CI_DOCKER_IM_REF=$(docker inspect --format='{{index .RepoDigests 0}}' "$CI_REGISTRY_IMAGE${tag}")
    - echo $CI_DOCKER_IM_REF
    #- CI_DOCKER_IM_REF=$(docker images --no-trunc --quiet "$CI_REGISTRY_IMAGE${tag}") 
    - export CI_DOCKER_IM_REF
    - ls -la
    #- cd /builds/nebojsatomic/IDE21
    - mkdir build
    - echo -n "CI_DOCKER_IM_REF=$CI_DOCKER_IM_REF" >> ./build/build.env
    #- sed -i 's/sha256://' ./build/build.env
    - ls -la
    - cat ./build/build.env
  artifacts:
    paths: [build/]
    reports:
      dotenv: ./build/build.env
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
bridge:
  variables:
    SHA256_VALUE: "$CI_DOCKER_IM_REF"
  stage: bridge
  trigger: ide21/demo
  needs:
    - job: docker-build
      artifacts: true
  environment:
    name: demo
    url: $DEMO_URL
  only:
    - demo
